# Generated by Django 3.2.6 on 2022-02-12 11:56

import core.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0014_auto_20220118_2143'),
    ]

    operations = [
        migrations.CreateModel(
            name='AC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('S_No', models.IntegerField(default=None, null=True, unique=True, verbose_name='S.No.')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Name')),
                ('position', models.CharField(default=None, max_length=255, verbose_name='Position')),
            ],
            options={
                'verbose_name_plural': 'Advisory Committee',
            },
        ),
        migrations.CreateModel(
            name='ActivityCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(default=None, max_length=255, verbose_name=' Year ')),
                ('pdf1', models.FileField(null=True, upload_to=core.models.file_path15, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='PDF File')),
            ],
            options={
                'verbose_name_plural': 'Activity Calendar',
            },
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to=core.models.file_path16, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='PDF File')),
            ],
            options={
                'verbose_name_plural': 'Assets Created',
            },
        ),
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(default=None, max_length=255, verbose_name=' Year ')),
                ('description', models.TextField(default=None, max_length=500, null=True, verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=core.models.file_path9, verbose_name='Image')),
            ],
            options={
                'verbose_name_plural': 'Awards & Achievements',
            },
        ),
        migrations.CreateModel(
            name='BDC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(default=None, max_length=255, verbose_name='Event Date ')),
                ('donated_to', models.CharField(default=None, max_length=255, verbose_name=' Donated to ')),
                ('count', models.IntegerField(verbose_name='Units')),
                ('photo', models.ImageField(null=True, upload_to=core.models.file_path12, verbose_name='Image')),
            ],
            options={
                'verbose_name_plural': 'Blood Donation Camp (BDC)',
            },
        ),
        migrations.CreateModel(
            name='Camp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(default=None, max_length=255, verbose_name='Event Date ')),
                ('description', models.TextField(default=None, max_length=500, null=True, verbose_name='Description')),
                ('video', models.URLField(default=None, max_length=500, null=True, verbose_name='Video URL')),
            ],
            options={
                'verbose_name_plural': 'Camp Organised',
            },
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('S_No', models.IntegerField(blank=True, default=None, null=True, unique=True, verbose_name='S.No.')),
                ('event', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Event Name')),
                ('image', models.ImageField(null=True, upload_to=core.models.file_path1, verbose_name='Home Slider')),
            ],
            options={
                'verbose_name_plural': 'Home',
            },
        ),
        migrations.CreateModel(
            name='HomeUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049), (2050, 2050), (2051, 2051), (2052, 2052), (2053, 2053), (2054, 2054), (2055, 2055), (2056, 2056), (2057, 2057), (2058, 2058), (2059, 2059), (2060, 2060), (2061, 2061), (2062, 2062), (2063, 2063), (2064, 2064)], default=2026, verbose_name='Select the year you wish to stop displaying corona alert in homepage:')),
                ('award', models.IntegerField(default=42, verbose_name='Awards')),
            ],
            options={
                'verbose_name_plural': 'Home awards & corona warning update',
            },
        ),
        migrations.CreateModel(
            name='NLM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(default=None, max_length=255, verbose_name='Event Title')),
                ('date', models.CharField(default=None, max_length=255, verbose_name='Date & Year ')),
                ('place', models.CharField(default=None, max_length=255, verbose_name='Place')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=core.models.file_path6, verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=core.models.file_path6, verbose_name='Image 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to=core.models.file_path6, verbose_name='Image 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to=core.models.file_path6, verbose_name='Image 4')),
                ('video', models.URLField(blank=True, default=None, max_length=500, null=True, verbose_name='Video URL')),
            ],
            options={
                'verbose_name_plural': 'National Literacy Mission',
            },
        ),
        migrations.CreateModel(
            name='Others',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049), (2050, 2050), (2051, 2051), (2052, 2052), (2053, 2053), (2054, 2054), (2055, 2055), (2056, 2056), (2057, 2057), (2058, 2058), (2059, 2059), (2060, 2060), (2061, 2061), (2062, 2062), (2063, 2063), (2064, 2064)], default=2022, verbose_name='Year: (Note: Year you select here must be the starting year of this academic. E.g., For 2021-2022, you should select here 2021 only not 2022.')),
                ('event', models.CharField(default=None, max_length=255, verbose_name='Event Name ')),
                ('date', models.CharField(default=None, max_length=255, verbose_name=' Date & Time ')),
                ('description', models.TextField(default=None, max_length=500, null=True, verbose_name='Description')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=core.models.file_path18, verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=core.models.file_path18, verbose_name='Image 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to=core.models.file_path18, verbose_name='Image 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to=core.models.file_path18, verbose_name='Image 4')),
                ('video', models.URLField(blank=True, default=None, max_length=500, null=True, verbose_name='Youtube URL')),
            ],
            options={
                'verbose_name_plural': 'Events Organised (Others)',
            },
        ),
        migrations.CreateModel(
            name='PMY',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=255, verbose_name='Scheme Title ')),
                ('Objective', models.TextField(default=None, max_length=500, null=True, verbose_name='Objective')),
                ('link', models.CharField(default=None, max_length=500, null=True, verbose_name='Read More Link')),
                ('image', models.ImageField(null=True, upload_to=core.models.file_path4, verbose_name='Scheme Image')),
            ],
            options={
                'verbose_name_plural': 'Pradhan Mantri Yojana (PMY)',
            },
        ),
        migrations.CreateModel(
            name='POs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('S_No', models.IntegerField(default=None, null=True, unique=True, verbose_name='S.No.')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Name')),
                ('position', models.CharField(default=None, max_length=255, verbose_name='Position')),
                ('photo', models.ImageField(null=True, upload_to=core.models.file_path3, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpeg', 'jpg'])], verbose_name='Photo')),
            ],
            options={
                'verbose_name_plural': 'Programme Officers',
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Report', 'Report'), ('Magazine', 'Magazine')], default=None, max_length=255, verbose_name=' type ')),
                ('year', models.CharField(default=None, max_length=255, verbose_name=' Year ')),
                ('file', models.FileField(null=True, upload_to=core.models.file_path14, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='PDF File')),
            ],
            options={
                'verbose_name_plural': 'Reports & Magazines',
            },
        ),
        migrations.CreateModel(
            name='Sapling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(default=None, max_length=255, verbose_name='Event Name ')),
                ('count', models.CharField(default=None, max_length=255, verbose_name=' Sapling Count ')),
                ('About', models.TextField(default=None, max_length=500, null=True, verbose_name='Event Description')),
                ('year', models.CharField(default=None, max_length=255, verbose_name=' Year ')),
                ('image1', models.ImageField(null=True, upload_to=core.models.file_path11, verbose_name='Image 1')),
            ],
            options={
                'verbose_name_plural': 'Sapling Plantation',
            },
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(default=None, max_length=255, verbose_name='Event Date ')),
                ('description', models.TextField(default=None, max_length=500, null=True, verbose_name='Description')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=core.models.file_path13, verbose_name='Image')),
            ],
            options={
                'verbose_name_plural': 'Seminars & Conferences',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('S_No', models.IntegerField(blank=True, default=None, null=True, unique=True, verbose_name='S.No.')),
                ('event', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='Event Name')),
                ('image', models.ImageField(null=True, upload_to=core.models.file_path2, verbose_name='Services Slider')),
            ],
            options={
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to=core.models.file_path17, verbose_name='Structure Image(For update , replace this image only)')),
            ],
            options={
                'verbose_name_plural': 'NSS Structure',
            },
        ),
        migrations.CreateModel(
            name='UBA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(default=None, max_length=255, verbose_name='Event Name ')),
                ('date', models.CharField(default=None, max_length=255, verbose_name=' Year ')),
                ('place', models.CharField(default=None, max_length=255, verbose_name='Place')),
                ('description', models.TextField(default=None, max_length=500, null=True, verbose_name='Description')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=core.models.file_path8, verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=core.models.file_path8, verbose_name='Image 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to=core.models.file_path8, verbose_name='Image 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to=core.models.file_path8, verbose_name='Image 4')),
                ('video', models.URLField(blank=True, default=None, max_length=500, null=True, verbose_name='Youtube URL')),
            ],
            options={
                'verbose_name_plural': 'Unnat Bharat Abhiyan(UBA)',
            },
        ),
        migrations.CreateModel(
            name='UpcomingEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(default=None, max_length=255, verbose_name='Event Name')),
                ('date', models.CharField(default=None, max_length=255, verbose_name='Event Data & Time')),
            ],
            options={
                'verbose_name_plural': 'Upcoming Events',
            },
        ),
        migrations.CreateModel(
            name='VT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Name ')),
                ('skill', models.CharField(default=None, max_length=255, verbose_name='Skill ')),
                ('file', models.FileField(null=True, upload_to=core.models.file_path10, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'jpg'])], verbose_name='Video or Image')),
                ('image1', models.ImageField(blank=True, null=True, upload_to=core.models.file_path10, verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to=core.models.file_path10, verbose_name='Image 2')),
            ],
            options={
                'verbose_name_plural': 'Volunteers Talent',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
